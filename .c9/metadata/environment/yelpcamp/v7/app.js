{"filter":false,"title":"app.js","tooltip":"/yelpcamp/v7/app.js","undoManager":{"mark":12,"position":12,"stack":[[{"start":{"row":38,"column":0},"end":{"row":86,"column":0},"action":"remove","lines":["//INDEX - show all campgrounds","app.get(\"/campgrounds\", function(req, res){","    // Get all campgrounds from DB","    Campground.find({}, function(err, allCampgrounds){","       if(err){","           console.log(err);","       } else {","          res.render(\"campgrounds/index\",{campgrounds:allCampgrounds});","       }","    });","});","","//CREATE - add new campground to DB","app.post(\"/campgrounds\", function(req, res){","    // get data from form and add to campgrounds array","    var name = req.body.name;","    var image = req.body.image;","    var desc = req.body.description;","    var newCampground = {name: name, image: image, description: desc}","    // Create a new campground and save to DB","    Campground.create(newCampground, function(err, newlyCreated){","        if(err){","            console.log(err);","        } else {","            //redirect back to campgrounds page","            res.redirect(\"/campgrounds\");","        }","    });","});","","//NEW - show form to create new campground","app.get(\"/campgrounds/new\", function(req, res){","   res.render(\"campgrounds/new\"); ","});","","// SHOW - shows more info about one campground","app.get(\"/campgrounds/:id\", function(req, res){","    //find the campground with provided ID","    Campground.findById(req.params.id).populate(\"comments\").exec(function(err, foundCampground){","        if(err){","            console.log(err);","        } else {","            console.log(foundCampground)","            //render show template with that campground","            res.render(\"campgrounds/show\", {campground: foundCampground});","        }","    });","});",""],"id":2}],[{"start":{"row":39,"column":0},"end":{"row":77,"column":0},"action":"remove","lines":["","// ====================","// COMMENTS ROUTES","// ====================","","app.get(\"/campgrounds/:id/comments/new\", isLoggedIn, function(req, res){","    // find campground by id","    Campground.findById(req.params.id, function(err, campground){","        if(err){","            console.log(err);","        } else {","             res.render(\"comments/new\", {campground: campground});","        }","    })","});","","app.post(\"/campgrounds/:id/comments\",isLoggedIn,function(req, res){","   //lookup campground using ID","   Campground.findById(req.params.id, function(err, campground){","       if(err){","           console.log(err);","           res.redirect(\"/campgrounds\");","       } else {","        Comment.create(req.body.comment, function(err, comment){","           if(err){","               console.log(err);","           } else {","               campground.comments.push(comment);","               campground.save();","               res.redirect('/campgrounds/' + campground._id);","           }","        });","       }","   });","   //create new comment","   //connect new comment to campground","   //redirect campground show page","});",""],"id":3}],[{"start":{"row":34,"column":0},"end":{"row":79,"column":3},"action":"remove","lines":["app.get(\"/\", function(req, res){","    res.render(\"landing\");","});","","","","","//  ===========","// AUTH ROUTES","//  ===========","","// show register form","app.get(\"/register\", function(req, res){","   res.render(\"register\"); ","});","//handle sign up logic","app.post(\"/register\", function(req, res){","    var newUser = new User({username: req.body.username});","    User.register(newUser, req.body.password, function(err, user){","        if(err){","            console.log(err);","            return res.render(\"register\");","        }","        passport.authenticate(\"local\")(req, res, function(){","           res.redirect(\"/campgrounds\"); ","        });","    });","});","","// show login form","app.get(\"/login\", function(req, res){","   res.render(\"login\"); ","});","// handling login logic","app.post(\"/login\", passport.authenticate(\"local\", ","    {","        successRedirect: \"/campgrounds\",","        failureRedirect: \"/login\"","    }), function(req, res){","});","","// logic route","app.get(\"/logout\", function(req, res){","   req.logout();","   res.redirect(\"/campgrounds\");","});"],"id":4}],[{"start":{"row":35,"column":0},"end":{"row":42,"column":0},"action":"remove","lines":["","function isLoggedIn(req, res, next){","    if(req.isAuthenticated()){","        return next();","    }","    res.redirect(\"/login\");","}",""],"id":5}],[{"start":{"row":10,"column":1},"end":{"row":11,"column":0},"action":"insert","lines":["",""],"id":6},{"start":{"row":11,"column":0},"end":{"row":11,"column":1},"action":"insert","lines":[" "]},{"start":{"row":11,"column":1},"end":{"row":12,"column":0},"action":"insert","lines":["",""]},{"start":{"row":12,"column":0},"end":{"row":12,"column":1},"action":"insert","lines":[" "]}],[{"start":{"row":11,"column":1},"end":{"row":14,"column":48},"action":"insert","lines":["//requring routes","var commentRoutes    = require(\"./routes/comments\"),","    campgroundRoutes = require(\"./routes/campgrounds\"),","    indexRoutes      = require(\"./routes/index\")"],"id":7}],[{"start":{"row":39,"column":0},"end":{"row":41,"column":52},"action":"insert","lines":["app.use(\"/\", indexRoutes);","app.use(\"/campgrounds\", campgroundRoutes);","app.use(\"/campgrounds/:id/comments\", commentRoutes);"],"id":8}],[{"start":{"row":16,"column":49},"end":{"row":16,"column":50},"action":"remove","lines":["6"],"id":9}],[{"start":{"row":16,"column":49},"end":{"row":16,"column":50},"action":"insert","lines":["7"],"id":10}],[{"start":{"row":0,"column":0},"end":{"row":45,"column":3},"action":"remove","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    passport    = require(\"passport\"),","    LocalStrategy = require(\"passport-local\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    User        = require(\"./models/user\"),","    seedDB      = require(\"./seeds\")"," "," //requring routes","var commentRoutes    = require(\"./routes/comments\"),","    campgroundRoutes = require(\"./routes/campgrounds\"),","    indexRoutes      = require(\"./routes/index\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v7\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","seedDB();","","// PASSPORT CONFIGURATION","app.use(require(\"express-session\")({","    secret: \"Once again Rusty wins cutest dog!\",","    resave: false,","    saveUninitialized: false","}));","app.use(passport.initialize());","app.use(passport.session());","passport.use(new LocalStrategy(User.authenticate()));","passport.serializeUser(User.serializeUser());","passport.deserializeUser(User.deserializeUser());","","app.use(function(req, res, next){","   res.locals.currentUser = req.user;","   next();","});","","app.use(\"/\", indexRoutes);","app.use(\"/campgrounds\", campgroundRoutes);","app.use(\"/campgrounds/:id/comments\", commentRoutes);","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":11}],[{"start":{"row":0,"column":0},"end":{"row":45,"column":3},"action":"insert","lines":["var express     = require(\"express\"),","    app         = express(),","    bodyParser  = require(\"body-parser\"),","    mongoose    = require(\"mongoose\"),","    passport    = require(\"passport\"),","    LocalStrategy = require(\"passport-local\"),","    Campground  = require(\"./models/campground\"),","    Comment     = require(\"./models/comment\"),","    User        = require(\"./models/user\"),","    seedDB      = require(\"./seeds\")","    ","//requring routes","var commentRoutes    = require(\"./routes/comments\"),","    campgroundRoutes = require(\"./routes/campgrounds\"),","    indexRoutes      = require(\"./routes/index\")","    ","mongoose.connect(\"mongodb://localhost/yelp_camp_v6\");","app.use(bodyParser.urlencoded({extended: true}));","app.set(\"view engine\", \"ejs\");","app.use(express.static(__dirname + \"/public\"));","seedDB();","","// PASSPORT CONFIGURATION","app.use(require(\"express-session\")({","    secret: \"Once again Rusty wins cutest dog!\",","    resave: false,","    saveUninitialized: false","}));","app.use(passport.initialize());","app.use(passport.session());","passport.use(new LocalStrategy(User.authenticate()));","passport.serializeUser(User.serializeUser());","passport.deserializeUser(User.deserializeUser());","","app.use(function(req, res, next){","   res.locals.currentUser = req.user;","   next();","});","","app.use(\"/\", indexRoutes);","app.use(\"/campgrounds\", campgroundRoutes);","app.use(\"/campgrounds/:id/comments\", commentRoutes);","","app.listen(process.env.PORT, process.env.IP, function(){","   console.log(\"The YelpCamp Server Has Started!\");","});"],"id":12}],[{"start":{"row":16,"column":49},"end":{"row":16,"column":50},"action":"remove","lines":["6"],"id":13}],[{"start":{"row":16,"column":49},"end":{"row":16,"column":50},"action":"insert","lines":["7"],"id":14}]]},"ace":{"folds":[],"scrolltop":433.5,"scrollleft":0,"selection":{"start":{"row":16,"column":50},"end":{"row":16,"column":50},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":29,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1594656717797,"hash":"61af825c6e718aa8990e1c33b55a1f21c7636b14"}